{
  //  - Default and User Settings
  //"workbench.settings.openDefaultSettings": true,
  //  - Settings .json
  //"workbench.settings.editor": "json",
  //  -  Git Ignore
  "explorer.excludeGitIgnore": false,
  //  - Updates
  "update.mode": "manual",
  "update.showReleaseNotes": false,
  "update.enableWindowsBackgroundUpdates": false,
  //  - Privacy
  "telemetry.telemetryLevel": "off",
  "telemetry.feedback.enabled": true,
  //  - Security
  "security.restrictUNCAccess": false,
  "security.workspace.trust.enabled": false,
  "security.workspace.trust.banner": "never",
  "security.workspace.trust.emptyWindow": true,
  "security.workspace.trust.untrustedFiles": "open",
  "security.workspace.trust.startupPrompt": "never",
  "security.promptForLocalFileProtocolHandling": false,
  "security.promptForRemoteFileProtocolHandling": false,
  //  - Show
  "editor.suggest.showWords": true,
  "editor.suggest.showIssues": true,
  "editor.suggest.showClasses": true,
  "editor.suggest.showMethods": true,
  "editor.suggest.showFunctions": true,
  "editor.suggest.showVariables": true,
  "editor.suggest.showConstants": true,
  "editor.suggest.showStatusBar": true,
  "editor.showFoldingControls": "always",
  "terminal.integrated.showExitAlert": false,
  "workbench.secondarySideBar.showLabels": false,
  "workbench.view.alwaysShowHeaderActions": true,
  "workbench.editor.alwaysShowEditorActions": false,
  //  - Suggestions
  "chat.tools.autoApprove": true,
  "chat.renderRelatedFiles": true,
  "workbench.reduceMotion": "off",
  "editor.suggest.preview": true,
  "editor.quickSuggestionsDelay": 0,
  "editor.snippetSuggestions": "top",
  "editor.suggestSelection": "recentlyUsed",
  "editor.suggest.localityBonus": true,
  "editor.suggest.filterGraceful": true,
  "editor.suggest.insertMode": "insert",
  "editor.parameterHints.enabled": true,
  "editor.suggest.matchOnWordStartOnly": false,
  "editor.suggest.shareSuggestSelections": true,
  "github.copilot.nextEditSuggestions.fixes": true,
  "editor.acceptSuggestionOnCommitCharacter": true,
  "github.copilot.nextEditSuggestions.enabled": true,
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.quickSuggestions": {
    "comments": true,
    "strings": true,
    "other": true
  },
  //  - Format
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.formatOnPaste": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  //  - Theme and Icons
  "workbench.iconTheme": "symbols",
  "workbench.colorTheme": "o9 Theme",
  "symbols.hidesExplorerArrows": false,
  "workbench.productIconTheme": "fluent-icons",
  "workbench.preferredDarkColorTheme": "o9 Theme",
  //  - Editor Fonts
  "editor.fontSize": 14,
  "editor.lineHeight": 25,
  "chat.editor.lineHeight": 15,
  "chat.editor.fontSize": 10,
  "editor.fontWeight": "bold",
  "chat.editor.fontWeight": "normal",
  "debug.console.fontSize": 15,
  "editor.codeLensFontSize": 0,
  "debug.console.lineHeight": 35,
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.lineHeight": 1.2,
  "chat.editor.fontFamily": "JetBrains Mono",
  "editor.fontFamily": "JetBrains Mono",
  "scm.inputFontFamily": "JetBrains mono",
  "debug.console.fontFamily": "JetBrains Mono",
  "editor.fontLigatures": "'ss01', 'cv03', 'zero'",
  "terminal.integrated.fontFamily": "JetBrains Mono",
  "editor.inlineSuggest.fontFamily": "JetBrains Mono",
  "terminal.integrated.fontLigatures.enabled": true,
  "terminal.integrated.fontWeight": "normal",
  //  - Badges and Problems
  "outline.problems.badges": false,
  "search.decorations.badges": true,
  "search.decorations.colors": true,
  "problems.defaultViewMode": "table",
  "explorer.decorations.badges": true,
  "problems.decorations.enabled": false,
  "workbench.editor.decorations.badges": true,
  "workbench.editor.decorations.colors": true,
  //  - Highlight
  "editor.renderLineHighlight": "all",
  "editor.occurrencesHighlight": "off",
  "editor.copyWithSyntaxHighlighting": false,
  "editor.unicodeHighlight.nonBasicASCII": false,
  "workbench.editor.highlightModifiedTabs": true,
  "editor.guides.highlightActiveIndentation": false,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.semanticHighlighting.enabled": "configuredByTheme",
  //  - Location
  "debug.toolBarLocation": "docked",
  "workbench.sideBar.location": "right",
  "references.preferredLocation": "view",
  "workbench.editor.tabActionLocation": "left",
  "workbench.editor.editorActionsLocation": "default",
  "editor.gotoLocation.multipleReferences": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleDeclarations": "goto",
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleTypeDefinitions": "goto",
  //  - Line
  "editor.lineNumbers": "on",
  "debug.inlineValues": "on",
  "search.showLineNumbers": true,
  "files.trimFinalNewlines": true,
  "files.insertFinalNewline": true,
  "editor.inlineSuggest.enabled": true,
  "editor.unfoldOnClickAfterEndOfLine": true,
  "editor.inlineSuggest.edits.showCollapsed": true,
  //  - Title
  "window.titleBarStyle": "custom",
  "window.title": "${activeEditorLong}",
  "window.customTitleBarVisibility": "never",
  //  - Interface
  "window.zoomLevel": 0,
  "breadcrumbs.enabled": true,
  "window.commandCenter": false,
  "window.dialogStyle": "custom",
  "window.restoreWindows": "all",
  "window.restoreFullscreen": false,
  "window.menuBarVisibility": "compact",
  "window.autoDetectColorScheme": false,
  "window.autoDetectHighContrast": false,
  "workbench.editor.empty.hint": "hidden",
  "window.newWindowDimensions": "inherit",
  "merge-conflict.diffViewPosition": "Below",
  "merge-conflict.autoNavigateNextConflict.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  //  - Word Wrap
  "editor.wordWrap": "on",
  "diffEditor.wordWrap": "on",
  "chat.editor.wordWrap": "on",
  "outline.collapseItems": "alwaysExpand",
  //  - Scroll Bar
  "editor.scrollBeyondLastLine": false,
  "editor.stickyScroll.enabled": false,
  "editor.scrollbar.vertical": "hidden",
  "workbench.list.horizontalScrolling": true,
  "workbench.editor.scrollToSwitchTabs": true,
  "editor.scrollbar.verticalScrollbarSize": 8,
  "editor.scrollbar.horizontalScrollbarSize": 8,
  "terminal.integrated.stickyScroll.enabled": true,
  //  - Smooth Scrolling
  "editor.smoothScrolling": true,
  "workbench.list.smoothScrolling": true,
  "terminal.integrated.smoothScrolling": true,
  //  - Minimap
  "editor.minimap.maxColumn": 40,
  "editor.minimap.enabled": true,
  "editor.minimap.autohide": true,
  "editor.minimap.showSlider": "mouseover",
  "editor.minimap.renderCharacters": false,
  //  - Cursor
  "editor.cursorStyle": "line",
  "editor.multiCursorLimit": 50000,
  "editor.cursorBlinking": "smooth",
  "editor.overtypeCursorStyle": "line",
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.hideCursorInOverviewRuler": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "terminal.integrated.cursorStyleInactive": "none",
  //  - Terminal Profile
  "terminal.explorerKind": "both",
  "terminal.external.windowsExec": "wt",
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  //  - Terminal Settings
  "terminal.integrated.hideOnStartup": "always",
  "terminal.integrated.gpuAcceleration": "off",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.suggest.inlineSuggestion": "off",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  //  - Confirm
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "debug.confirmOnExit": "never",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmPasteNative": false,
  "window.confirmBeforeClose": "never",
  "window.confirmSaveUntitledWorkspace": false,
  "terminal.integrated.confirmOnKill": "never",
  //  - Workbench
  "workbench.tree.indent": 16,
  "workbench.tips.enabled": false,
  "workbench.editor.limit.value": 20,
  "workbench.statusBar.visible": true,
  "workbench.enableExperiments": false,
  "workbench.editor.revealIfOpen": true,
  "workbench.list.openMode": "singleClick",
  "workbench.layoutControl.enabled": false,
  "workbench.editor.closeEmptyGroups": true,
  "workbench.list.defaultFindMode": "filter",
  "workbench.tree.expandMode": "singleClick",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.tree.renderIndentGuides": "none",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.commandPalette.preserveInput": true,
  "workbench.editor.enablePreviewFromQuickOpen": true,
  //  - Tabs
  "editor.tabSize": 2,
  "editor.tabCompletion": "on",
  "workbench.editor.wrapTabs": true,
  "workbench.panel.showLabels": false,
  "workbench.editor.tabSizing": "shrink",
  "workbench.editor.showTabs": "multiple",
  "workbench.editor.labelFormat": "short",
  "window.density.editorTabHeight": "compact",
  "workbench.editor.pinnedTabSizing": "compact",
  "workbench.editor.tabSizingFixedMinWidth": 40,
  "workbench.editor.tabSizingFixedMaxWidth": 80,
  //  - Search
  "search.smartCase": true,
  "search.followSymlinks": false,
  "search.maxResults": 10000,
  "search.sortOrder": "default",
  "search.useIgnoreFiles": false,
  "search.actionsPosition": "right",
  "search.quickOpen.includeSymbols": false,
  "search.collapseResults": "auto",
  "search.exclude": {
    "*node_modules": true,
    "*dist": true
  },
  //  - Tool Tips
  "editor.hover.above": true,
  "editor.hover.delay": 0,
  "editor.hover.enabled": false,
  "editor.hover.hidingDelay": 0,
  "editor.hover.sticky": false,
  "editor.lightbulb.enabled": "on",
  //  - Editor
  "editor.folding": false,
  "editor.letterSpacing": 0,
  "editor.glyphMargin": false,
  "editor.linkedEditing": true,
  "editor.mouseWheelZoom": true,
  "editor.matchBrackets": "near",
  "editor.autoIndent": "advanced",
  "editor.renderWhitespace": "none",
  "editor.renderControlCharacters": false,
  "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
  //  - Files
  //"files.simpleDialog.enable": false,
  "files.eol": "\n",
  "files.autoSave": "off",
  "files.encoding": "utf8",
  "files.trimTrailingWhitespace": true,
  "files.exclude": {
    "**/.git": false,
    "**/.env": false,
    "**/.*": false
  },
  //  - Explorer
  "explorer.compactFolders": true,
  "explorer.openEditors.visible": 1,
  "explorer.fileNesting.expand": true,
  "explorer.fileNesting.enabled": true,
  "explorer.sortOrder": "foldersNestsFiles",
  //  - GITHUB COPILOT
  "chat.agent.enabled": true,
  "github.copilot.advanced": {},
  "chat.commandCenter.enabled": false,
  "github.copilot.chat.agent.autoFix": true,
  "github.copilot.chat.scopeSelection": true,
  "github.copilot.chat.agent.runTasks": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "scminput": true
  },
  //  - Accessibility
  "editor.accessibilitySupport": "off",
  "accessibility.signalOptions.volume": 25,
  //  - Zen Mode
  "zenMode.centerLayout": false,
  "zenMode.silentNotifications": true,
  //  - Debug
  "debug.onTaskErrors": "abort",
  "debug.console.closeOnEnd": true,
  "debug.autoExpandLazyVariables": "on",
  "debug.allowBreakpointsEverywhere": true,
  //  - Diff Editor
  "diffEditor.renderSideBySide": false,
  "diffEditor.diffAlgorithm": "advanced",
  "diffEditor.ignoreTrimWhitespace": false,
  "multiDiffEditor.experimental.enabled": true,
  //  - Other Settings
  "editor.insertSpaces": true,
  "editor.foldingStrategy": "auto",
  "editor.inlayHints.enabled": "on",
  "editor.guides.indentation": true,
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  //  - Language Settings
  "powershell.promptToUpdatePowerShell": false,
  "powershell.developer.setExecutionPolicy": true,
  "workbench.settings.enableNaturalLanguageSearch": false,
  "workbench.editorAssociations": {
    "*.copilotmd": "vscode.markdown.preview.editor",
    "*.svg": "default"
  },
  "diffEditor.hideUnchangedRegions.enabled": true,
  "[astro]": {
    "editor.defaultFormatter": "dprint.dprint"
  },
  "scss.validate": false,
  "markdown.preview.fontFamily": "JetBrains Mono",
  "files.associations": {
    "**/frontmatter.json": "jsonc",
    "**/.frontmatter/config/*.json": "jsonc",
    "*.atml": "html",
    "*.njk": "html",
    "*.fish": "powershell",
    "*.js": "javascript",
    "*.mdx": "markdown",
    ".babelrc": "json",
    ".huskyrc": "json",
    ".env*": "dotenv"
  },
  "emmet.triggerExpansionOnTab": true,
  "emmet.useInlineCompletions": true,
  "emmet.showAbbreviationSuggestions": true,
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "jsx-sublime-babel-tags": "javascriptreact",
    "tsx": "typescriptreact",
    "njk": "html",
    "nunjucks": "html",
    "postcss": "css"
  },
  "emmet.syntaxProfiles": {
    "postcss": "css"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "scm.diffDecorationsGutterPattern": {
    "added": true
  },
  "explorer.fileNesting.patterns": {
    "//": "Last update at 26/05/2024, 08:51:55",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, compose.*, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.db": "*.db-shm, *.db-wal",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).scss, $(capture).module.scss",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs"
  },
  //  - Extensions Settings
  "extensions.autoUpdate": false,
  "extensions.verifySignature": false,
  "extensions.autoCheckUpdates": false,
  "extensions.ignoreRecommendations": true,
  "editor.guides.bracketPairsHorizontal": "active",
  "extensions.experimental.issueQuickAccess": false,
  //  - Prettier — "esbenp.prettier-vscode"
  "prettier.trailingComma": "all",
  //  - ESlint — "dbaeumer.vscode-eslint""
  "eslint.validate": ["javascript", "javascriptreact", "graphql"],
  "eslint.lintTask.enable": true,
  "eslint.run": "onSave",
  //  - Tailwind CSS — "bradlc.vscode-tailwindcss"
  "tailwindCSS.includeLanguages": {
    "blade": "html"
  },
  "tailwindCSS.experimental.classRegex": [
    ["tv\\(([^)]*)\\)", "cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
    "class:\\s*?[\"'`]([^\"'`]*).*?,",
    "tw\\('([^']*)'\\)"
  ],
  //  - GitLens — "eamodio.gitlens"
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.advanced.messages": {
    "suppressIntegrationDisconnectedTooManyFailedRequestsWarning": true,
    "suppressIntegrationRequestTimedOutWarning": true
  },
  //  - Project Manager — "alefragnani.project-manager"
  "projectManager.git.baseFolders": [],
  "projectManager.groupList": true,
  "projectManager.sortList": "Recent",
  //  - Redhat Telemetry
  "redhat.telemetry.enabled": false,
  //  - Auto Rename Tag — "formulahendry.auto-rename-tag"
  "auto-rename-tag.activationOnLanguage": ["*"],
  //  - Better Comments — "aaron-bond.better-comments"
  "better-comments.multilineComments": true,
  "better-comments.highlightPlainText": true,
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "todo",
      "color": "#FF8C00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],
  //  - live Server — "ritwickdey.LiveServer"
  "liveServer.settings.donotShowInfoMsg": true,
  //  - Color Info — "bierner.color-info"
  "colorInfo.languages": [
    {
      "selector": "css",
      "colors": "css"
    },
    {
      "selector": "sass",
      "colors": "css"
    },
    {
      "selector": "scss",
      "colors": "css"
    },
    {
      "selector": "less",
      "colors": "css"
    },
    {
      "selector": "ts",
      "colors": "css"
    },
    {
      "selector": "js",
      "colors": "css"
    }
  ],
  //  - Surround — "yatki.vscode-surround"
  "surround.custom": {
    "promise": {
      "description": "Promise<...>",
      "disabled": false,
      "label": "Promise<...>",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "Promise<$TM_SELECTED_TEXT>"
    },
    "console-log": {
      "description": "console.log( ... )",
      "disabled": false,
      "label": "console.log",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "console.log(`$TM_SELECTED_TEXT`, $TM_SELECTED_TEXT)"
    },
    "describe": {
      "description": "describe('${1:name}', () => { ... })",
      "disabled": false,
      "label": "describe",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "snippet": "describe('${1:name}', () => {\n\t$TM_SELECTED_TEXT\n})$0"
    },
    "errorBoundary": {
      "description": "<ErrorBoundary>",
      "disabled": false,
      "label": "errorBoundary",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "snippet": "<ErrorBoundary>$TM_SELECTED_TEXT</ErrorBoundary>"
    },
    "es6StringSubstition": {
      "description": "${...}",
      "disabled": false,
      "label": "es6StringSubstition",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "${$TM_SELECTED_TEXT}"
    },
    "es6StringSubstitionBackticks": {
      "description": "`${...}`",
      "disabled": false,
      "label": "es6StringSubstitionBackticks",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "`${$TM_SELECTED_TEXT}$0`"
    },
    "function": {
      "description": "$( ... )",
      "disabled": false,
      "label": "function",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "$1($TM_SELECTED_TEXT)$0"
    },
    "jsxConditional": {
      "description": "{x && ( ... )}",
      "disabled": false,
      "label": "jsxConditional",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "{$0 && ($TM_SELECTED_TEXT)}"
    },
    "jsxConditional2": {
      "description": "{x ? ( ... ) : null}",
      "disabled": false,
      "label": "better jsxConditional",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "{$0 ? ($TM_SELECTED_TEXT) : null}"
    },
    "markdown-link": {
      "description": "[]( ... )",
      "disabled": false,
      "label": "Markdown link [url]",
      "snippet": "[$0]($TM_SELECTED_TEXT)"
    },
    "markdown-link-alt": {
      "description": "[ ... ]()",
      "disabled": false,
      "label": "Markdown link [text]",
      "snippet": "[$TM_SELECTED_TEXT]($0)"
    },
    "number": {
      "description": "Number( ... )",
      "disabled": false,
      "label": "Number",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "Number($TM_SELECTED_TEXT)"
    },
    "parse": {
      "description": "JSON.parse( ... )",
      "disabled": false,
      "label": "JSON.parse",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "JSON.parse($TM_SELECTED_TEXT)$0"
    },
    "reactFragment": {
      "description": "<Fragment>",
      "disabled": false,
      "label": "fragment",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Fragment>$TM_SELECTED_TEXT</Fragment>"
    },
    "reactFragment2": {
      "description": "<>",
      "disabled": false,
      "label": "fragment (simple)",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<>$TM_SELECTED_TEXT</>"
    },
    "reactUseMemo": {
      "description": "useMemo",
      "disabled": false,
      "label": "useMemo",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "useMemo(() => $TM_SELECTED_TEXT, [])"
    },
    "reactUseCallback": {
      "description": "useCallback",
      "disabled": false,
      "label": "useCallback",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "useCallback(() => $TM_SELECTED_TEXT, [])"
    },
    "reactForwardRef": {
      "description": "forwardRef",
      "disabled": false,
      "label": "forwardRef",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "forwardRef<$1>($TM_SELECTED_TEXT)"
    },
    "stringify": {
      "description": "JSON.stringify( ... )",
      "disabled": false,
      "label": "JSON.stringify",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "svelte",
        "html",
        "astro"
      ],
      "snippet": "JSON.stringify($TM_SELECTED_TEXT)$0"
    },
    "suspense": {
      "description": "<Suspense>",
      "disabled": false,
      "label": "suspense",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "<Suspense fallback={<Loader />}>$TM_SELECTED_TEXT</Suspense>"
    },
    "svelteIf": {
      "description": "{#if}{/if}",
      "disabled": false,
      "label": "{#if}",
      "languageIds": ["svelte"],
      "snippet": "{#if $1}$TM_SELECTED_TEXT{/if}"
    },
    "svelteIfElse": {
      "description": "{#if}{:else}{/if}",
      "disabled": false,
      "label": "{#if}{:else}",
      "languageIds": ["svelte"],
      "snippet": "{#if $1}$TM_SELECTED_TEXT{:else}$2{/if}"
    },
    "JSXBox": {
      "description": "<Box>",
      "disabled": false,
      "label": "box",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Box>$TM_SELECTED_TEXT</Box>"
    },
    "JSXContainer": {
      "description": "<Container>",
      "disabled": false,
      "label": "container",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Container>$TM_SELECTED_TEXT</Container>"
    },
    "JSXFlex": {
      "description": "<Flex>",
      "disabled": false,
      "label": "flex",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Flex>$TM_SELECTED_TEXT</Flex>"
    },
    "JSXGrid": {
      "description": "<Grid>",
      "disabled": false,
      "label": "grid",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Grid>$TM_SELECTED_TEXT</Grid>"
    },
    "TSGeneric": {
      "description": "Generic<>",
      "disabled": false,
      "label": "TS Generic",
      "languageIds": ["typescript", "typescriptreact", "astro"],
      "snippet": "$1<$TM_SELECTED_TEXT, $0>"
    },
    "rem-polished": {
      "description": "${rem($)}",
      "disabled": false,
      "label": "rem",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "snippet": "${rem($TM_SELECTED_TEXT)}"
    },
    "css-var": {
      "description": "var($)",
      "disabled": false,
      "label": "var",
      "languageIds": ["css", "postcss", "javascriptreact", "typescriptreact"],
      "snippet": "var($TM_SELECTED_TEXT)"
    }
  },
  //  - GitLens — "eamodio.gitlens"
  "gitlens.views.repositories.compact": true,
  "gitlens.views.workspaces.compact": true,
  //  - Error Lens — "usernamehw.errorlens"
  "errorLens.enabledDiagnosticLevels": ["warning", "info", "hint"],
  "errorLens.messageTemplate": "($source) $message",
  "errorLens.removeLinebreaks": false,
  //  - Custom UI Style — "subframe7536.custom-ui-style"
  "custom-ui-style.font.sansSerif": "Inter, -apple-system",
  "custom-ui-style.electron": {
    "frame": false,
    "titleBarStyle": "hiddenInset",
    "trafficLightPosition": {
      "x": 11,
      "y": 10
    },
    "opacity": 0.96,
    "visualEffectState": "active",
    "vibrancy": "ultra-dark"
  },
  "custom-ui-style.stylesheet": {
    ".title-label > h2": "display: none",
    ".editor-actions": "display: none",
    ".nosidebar .inline-tabs-placeholder": "width: 75px",
    ".pane-header": "padding: 0 8px",
    ".pane-body": "padding: 8px",
    ".split-view-view:first-child .pane-header": "display: none !important;",
    ".monaco-list-row": "border-radius: 4px;",
    ".monaco-workbench .monaco-list:not(.element-focused):focus:before": "display: none;"
  },
  // APC Extension -- "drcika.apc-extension"
  "apc.font.family": "Inter",
  "apc.activityBar": {
    "position": "bottom",
    "hideSettings": true,
    "size": 48,
    "itemMargin": 8,
    "itemSize": 32
  },
  "apc.electron": {
    "titleBarStyle": "hidden",
    "titleBarOverlay": {
      "color": "rgba(0,0,0,0)",
      "symbolColor": "#cba6f7",
      "height": 42,
      "opacity": 0
    },
    "frame": false
  },
  "apc.header": {
    "height": 36
  },
  "apc.listRow": {
    "height": 24
  },
  "apc.stylesheet": {
    "body::after": "content:'';position:absolute;top:0;left:0;width:100%;height:10px;z-index:9999;-webkit-app-region: drag;",
    ".sidebar>.title>.title-label": "opacity: 0;flex: 0!important;padding: 0!important;",
    ".sidebar>.title": "padding: 0px 8px!important",
    ".nosidebar .inline-tabs-placeholder": "width: 75px",
    ".tabs-and-actions-container": "max-width: calc(100% - 115px);",
    ".pane-header": "padding: 0 8px",
    ".pane-body": "padding: 0px",
    ".split-view-view:first-child .pane-header": "display: none !important;",
    ".monaco-list-row": "border-radius: 0px;",
    ".monaco-workbench .monaco-list:not(.element-focused):focus:before": "display: none;",
    ".window-appicon": "display: none;"
  },
  //  - Code Spell Checker — "streetsidesoftware.code-spell-checker"
  "cSpell.language": "en",
  "cSpell.enableFiletypes": [
    "!asciidoc",
    "!c",
    "!cpp",
    "!csharp",
    "!go",
    "!handlebars",
    "!haskell",
    "!jade",
    "!java",
    "!latex",
    "!php",
    "!pug",
    "!python",
    "!restructuredtext",
    "!rust",
    "!scala",
    "!scss"
  ],
  "cSpell.userWords": [
    "automations",
    "bootcamp",
    "chakra",
    "checkin",
    "checkins",
    "cloudflare",
    "clsx",
    "Codegen",
    "datadog",
    "Datetime",
    "dayjs",
    "Dotenv",
    "Elysia",
    "esbuild",
    "fastify",
    "Fastify",
    "feedbackwidget",
    "ffprobe",
    "gamificada",
    "Hasher",
    "hono",
    "Hono",
    "ilike",
    "IUGU",
    "jamjuree",
    "jupiter",
    "ksuid",
    "liveblocks",
    "LIVEBLOCKS",
    "Marguerita",
    "middlewares",
    "mixpanel",
    "monaco",
    "nestjs",
    "nivo",
    "omni",
    "Omni",
    "Onboarded",
    "pallas",
    "postgres",
    "postgresql",
    "prefetch",
    "reactflow",
    "retriable",
    "roboto",
    "rocketseat",
    "rotion",
    "rsxp",
    "Sandpack",
    "shiki",
    "skylab",
    "sqlite",
    "supergraph",
    "svgr",
    "sympla",
    "tailwindcss",
    "textblock",
    "tiptap",
    "trpc",
    "TRPC",
    "tsup",
    "unfollow",
    "Unfollow",
    "unform",
    "Unform",
    "unmark",
    "upsert",
    "Usuario",
    "webm",
    "WEBPUSH",
    "zrevrank",
    "zscore"
  ],
  //  - Google Translate — "funkyremi.vscode-google-translate"
  "vscodeGoogleTranslate.preferredLanguage": "Arabic",
  //  - PHP — "DEVSENSE.phptools-vscode"
  "phpTools.language": "en",
  //  - Laravel Pint — "open-southeners.laravel-pint"
  "laravel-pint.enable": true,
  //  - shufo.vscode-blade-formatter
  "bladeFormatter.format.sortTailwindcssClasses": true,
  "bladeFormatter.format.sortHtmlAttributes": "code-guide",
  // - Razor Language Server — "ms-dotnettools.csharp"
  "razor.format.codeBlockBraceOnNextLine": true,
  //  - Dart-Code.dart-code
  "dart.flutterSdkPath": "/home/o9/dev/flutter/flutter-sdk",
  //  - Codeium AI — "Codeium.codeium"
  "codeium.enableCodeLens": false,
  "codeium.enableConfig": {
    "*": true,
    "markdown": true,
    "bat": true
  }
}
